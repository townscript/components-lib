import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { DateTime } from "luxon";
let TimeService = class TimeService {
    constructor() {
        this.convertDateToTimezone = (date, timeZoneOffset) => {
            var date = DateTime.fromISO(date, { zone: timeZoneOffset });
            var dateString = DateTime.fromISO(date).toString();
            return this.formatLocalDate(new Date(dateString));
        };
        this.formatLocalDate = (now) => {
            var tzo = -now.getTimezoneOffset(), dif = tzo >= 0 ? '+' : '-', pad = function (num) {
                var norm = Math.abs(Math.floor(num));
                return (norm < 10 ? '0' : '') + norm;
            };
            return now.getFullYear()
                + '-' + pad(now.getMonth() + 1)
                + '-' + pad(now.getDate())
                + 'T' + pad(now.getHours())
                + ':' + pad(now.getMinutes())
                + ':' + pad(now.getSeconds())
                + '.000'
                + dif + pad(tzo / 60)
                + pad(tzo % 60);
        };
    }
};
TimeService = tslib_1.__decorate([
    Injectable(),
    tslib_1.__metadata("design:paramtypes", [])
], TimeService);
export { TimeService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRvd25zY3JpcHQvY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL3NlcnZpY2VzL3RpbWUuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sT0FBTyxDQUFDO0FBR2pDLElBQWEsV0FBVyxHQUF4QixNQUFhLFdBQVc7SUFFcEI7UUFHQSwwQkFBcUIsR0FBRyxDQUFDLElBQUksRUFBRSxjQUFjLEVBQUUsRUFBRTtZQUM3QyxJQUFJLElBQUksR0FBRyxRQUFRLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxFQUFFLElBQUksRUFBRSxjQUFjLEVBQUUsQ0FBQyxDQUFDO1lBQzVELElBQUksVUFBVSxHQUFHLFFBQVEsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUM7WUFDbkQsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7UUFDdEQsQ0FBQyxDQUFDO1FBRUYsb0JBQWUsR0FBRyxDQUFDLEdBQUcsRUFBRSxFQUFFO1lBQ3RCLElBQUksR0FBRyxHQUFHLENBQUMsR0FBRyxDQUFDLGlCQUFpQixFQUFFLEVBQzlCLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFDMUIsR0FBRyxHQUFHLFVBQVUsR0FBRztnQkFDZixJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztnQkFDckMsT0FBTyxDQUFDLElBQUksR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDO1lBQ3pDLENBQUMsQ0FBQztZQUNOLE9BQU8sR0FBRyxDQUFDLFdBQVcsRUFBRTtrQkFDbEIsR0FBRyxHQUFHLEdBQUcsQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLEdBQUcsQ0FBQyxDQUFDO2tCQUM3QixHQUFHLEdBQUcsR0FBRyxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsQ0FBQztrQkFDeEIsR0FBRyxHQUFHLEdBQUcsQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLENBQUM7a0JBQ3pCLEdBQUcsR0FBRyxHQUFHLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBRSxDQUFDO2tCQUMzQixHQUFHLEdBQUcsR0FBRyxDQUFDLEdBQUcsQ0FBQyxVQUFVLEVBQUUsQ0FBQztrQkFDM0IsTUFBTTtrQkFDTixHQUFHLEdBQUcsR0FBRyxDQUFDLEdBQUcsR0FBRyxFQUFFLENBQUM7a0JBQ25CLEdBQUcsQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDLENBQUM7UUFDeEIsQ0FBQyxDQUFBO0lBeEJELENBQUM7Q0F5QkosQ0FBQTtBQTVCWSxXQUFXO0lBRHZCLFVBQVUsRUFBRTs7R0FDQSxXQUFXLENBNEJ2QjtTQTVCWSxXQUFXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRGF0ZVRpbWUgfSBmcm9tIFwibHV4b25cIjtcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFRpbWVTZXJ2aWNlIHtcblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgIH1cblxuICAgIGNvbnZlcnREYXRlVG9UaW1lem9uZSA9IChkYXRlLCB0aW1lWm9uZU9mZnNldCkgPT4ge1xuICAgICAgICB2YXIgZGF0ZSA9IERhdGVUaW1lLmZyb21JU08oZGF0ZSwgeyB6b25lOiB0aW1lWm9uZU9mZnNldCB9KTtcbiAgICAgICAgdmFyIGRhdGVTdHJpbmcgPSBEYXRlVGltZS5mcm9tSVNPKGRhdGUpLnRvU3RyaW5nKCk7XG4gICAgICAgIHJldHVybiB0aGlzLmZvcm1hdExvY2FsRGF0ZShuZXcgRGF0ZShkYXRlU3RyaW5nKSk7XG4gICAgfTtcblxuICAgIGZvcm1hdExvY2FsRGF0ZSA9IChub3cpID0+IHtcbiAgICAgICAgdmFyIHR6byA9IC1ub3cuZ2V0VGltZXpvbmVPZmZzZXQoKSxcbiAgICAgICAgICAgIGRpZiA9IHR6byA+PSAwID8gJysnIDogJy0nLFxuICAgICAgICAgICAgcGFkID0gZnVuY3Rpb24gKG51bSkge1xuICAgICAgICAgICAgICAgIHZhciBub3JtID0gTWF0aC5hYnMoTWF0aC5mbG9vcihudW0pKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gKG5vcm0gPCAxMCA/ICcwJyA6ICcnKSArIG5vcm07XG4gICAgICAgICAgICB9O1xuICAgICAgICByZXR1cm4gbm93LmdldEZ1bGxZZWFyKClcbiAgICAgICAgICAgICsgJy0nICsgcGFkKG5vdy5nZXRNb250aCgpICsgMSlcbiAgICAgICAgICAgICsgJy0nICsgcGFkKG5vdy5nZXREYXRlKCkpXG4gICAgICAgICAgICArICdUJyArIHBhZChub3cuZ2V0SG91cnMoKSlcbiAgICAgICAgICAgICsgJzonICsgcGFkKG5vdy5nZXRNaW51dGVzKCkpXG4gICAgICAgICAgICArICc6JyArIHBhZChub3cuZ2V0U2Vjb25kcygpKVxuICAgICAgICAgICAgKyAnLjAwMCdcbiAgICAgICAgICAgICsgZGlmICsgcGFkKHR6byAvIDYwKVxuICAgICAgICAgICAgKyBwYWQodHpvICUgNjApO1xuICAgIH1cbn1cbiJdfQ==