import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { DateTime } from 'luxon';
let TimeService = class TimeService {
    constructor() {
        this.convertDateToTimezone = (date, timeZoneOffset) => {
            const dateVar = DateTime.fromISO(date, { zone: timeZoneOffset });
            const dateString = DateTime.fromISO(dateVar).toString();
            return this.formatLocalDate(new Date(dateString));
        };
        this.formatLocalDate = (now) => {
            const tzo = -now.getTimezoneOffset(), dif = tzo >= 0 ? '+' : '-', pad = function (num) {
                const norm = Math.abs(Math.floor(num));
                return (norm < 10 ? '0' : '') + norm;
            };
            return now.getFullYear()
                + '-' + pad(now.getMonth() + 1)
                + '-' + pad(now.getDate())
                + 'T' + pad(now.getHours())
                + ':' + pad(now.getMinutes())
                + ':' + pad(now.getSeconds())
                + '.000'
                + dif + pad(tzo / 60)
                + pad(tzo % 60);
        };
    }
};
TimeService = tslib_1.__decorate([
    Injectable()
], TimeService);
export { TimeService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRvd25zY3JpcHQvY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL3NlcnZpY2VzL3RpbWUuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sT0FBTyxDQUFDO0FBR2pDLElBQWEsV0FBVyxHQUF4QixNQUFhLFdBQVc7SUFFcEI7UUFHQSwwQkFBcUIsR0FBRyxDQUFDLElBQUksRUFBRSxjQUFjLEVBQU8sRUFBRTtZQUNsRCxNQUFNLE9BQU8sR0FBRyxRQUFRLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxFQUFFLElBQUksRUFBRSxjQUFjLEVBQUUsQ0FBQyxDQUFDO1lBQ2pFLE1BQU0sVUFBVSxHQUFHLFFBQVEsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUM7WUFDeEQsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7UUFDdEQsQ0FBQyxDQUFBO1FBRUQsb0JBQWUsR0FBRyxDQUFDLEdBQUcsRUFBTyxFQUFFO1lBQzNCLE1BQU0sR0FBRyxHQUFHLENBQUMsR0FBRyxDQUFDLGlCQUFpQixFQUFFLEVBQ2hDLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFDMUIsR0FBRyxHQUFHLFVBQVUsR0FBRztnQkFDZixNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztnQkFDdkMsT0FBTyxDQUFDLElBQUksR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDO1lBQ3pDLENBQUMsQ0FBQztZQUNOLE9BQU8sR0FBRyxDQUFDLFdBQVcsRUFBRTtrQkFDbEIsR0FBRyxHQUFHLEdBQUcsQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLEdBQUcsQ0FBQyxDQUFDO2tCQUM3QixHQUFHLEdBQUcsR0FBRyxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsQ0FBQztrQkFDeEIsR0FBRyxHQUFHLEdBQUcsQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLENBQUM7a0JBQ3pCLEdBQUcsR0FBRyxHQUFHLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBRSxDQUFDO2tCQUMzQixHQUFHLEdBQUcsR0FBRyxDQUFDLEdBQUcsQ0FBQyxVQUFVLEVBQUUsQ0FBQztrQkFDM0IsTUFBTTtrQkFDTixHQUFHLEdBQUcsR0FBRyxDQUFDLEdBQUcsR0FBRyxFQUFFLENBQUM7a0JBQ25CLEdBQUcsQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDLENBQUM7UUFDeEIsQ0FBQyxDQUFBO0lBeEJELENBQUM7Q0F5QkosQ0FBQTtBQTVCWSxXQUFXO0lBRHZCLFVBQVUsRUFBRTtHQUNBLFdBQVcsQ0E0QnZCO1NBNUJZLFdBQVciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEYXRlVGltZSB9IGZyb20gJ2x1eG9uJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFRpbWVTZXJ2aWNlIHtcblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgIH1cblxuICAgIGNvbnZlcnREYXRlVG9UaW1lem9uZSA9IChkYXRlLCB0aW1lWm9uZU9mZnNldCk6IGFueSA9PiB7XG4gICAgICAgIGNvbnN0IGRhdGVWYXIgPSBEYXRlVGltZS5mcm9tSVNPKGRhdGUsIHsgem9uZTogdGltZVpvbmVPZmZzZXQgfSk7XG4gICAgICAgIGNvbnN0IGRhdGVTdHJpbmcgPSBEYXRlVGltZS5mcm9tSVNPKGRhdGVWYXIpLnRvU3RyaW5nKCk7XG4gICAgICAgIHJldHVybiB0aGlzLmZvcm1hdExvY2FsRGF0ZShuZXcgRGF0ZShkYXRlU3RyaW5nKSk7XG4gICAgfVxuXG4gICAgZm9ybWF0TG9jYWxEYXRlID0gKG5vdyk6IGFueSA9PiB7XG4gICAgICAgIGNvbnN0IHR6byA9IC1ub3cuZ2V0VGltZXpvbmVPZmZzZXQoKSxcbiAgICAgICAgICAgIGRpZiA9IHR6byA+PSAwID8gJysnIDogJy0nLFxuICAgICAgICAgICAgcGFkID0gZnVuY3Rpb24gKG51bSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IG5vcm0gPSBNYXRoLmFicyhNYXRoLmZsb29yKG51bSkpO1xuICAgICAgICAgICAgICAgIHJldHVybiAobm9ybSA8IDEwID8gJzAnIDogJycpICsgbm9ybTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIHJldHVybiBub3cuZ2V0RnVsbFllYXIoKVxuICAgICAgICAgICAgKyAnLScgKyBwYWQobm93LmdldE1vbnRoKCkgKyAxKVxuICAgICAgICAgICAgKyAnLScgKyBwYWQobm93LmdldERhdGUoKSlcbiAgICAgICAgICAgICsgJ1QnICsgcGFkKG5vdy5nZXRIb3VycygpKVxuICAgICAgICAgICAgKyAnOicgKyBwYWQobm93LmdldE1pbnV0ZXMoKSlcbiAgICAgICAgICAgICsgJzonICsgcGFkKG5vdy5nZXRTZWNvbmRzKCkpXG4gICAgICAgICAgICArICcuMDAwJ1xuICAgICAgICAgICAgKyBkaWYgKyBwYWQodHpvIC8gNjApXG4gICAgICAgICAgICArIHBhZCh0em8gJSA2MCk7XG4gICAgfVxufVxuIl19