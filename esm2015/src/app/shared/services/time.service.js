import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { DateTime } from 'luxon';
let TimeService = class TimeService {
    constructor() {
        this.convertDateToTimezone = (date, timeZoneOffset) => {
            const dateVar = DateTime.fromISO(date, { zone: timeZoneOffset });
            const dateString = DateTime.fromISO(dateVar).toString();
            return this.formatLocalDate(new Date(dateString));
        };
        this.formatLocalDate = (now) => {
            const tzo = -now.getTimezoneOffset(), dif = tzo >= 0 ? '+' : '-', pad = function (num) {
                const norm = Math.abs(Math.floor(num));
                return (norm < 10 ? '0' : '') + norm;
            };
            return now.getFullYear()
                + '-' + pad(now.getMonth() + 1)
                + '-' + pad(now.getDate())
                + 'T' + pad(now.getHours())
                + ':' + pad(now.getMinutes())
                + ':' + pad(now.getSeconds())
                + '.000'
                + dif + pad(tzo / 60)
                + pad(tzo % 60);
        };
    }
};
TimeService = tslib_1.__decorate([
    Injectable(),
    tslib_1.__metadata("design:paramtypes", [])
], TimeService);
export { TimeService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRvd25zY3JpcHQvY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL3NlcnZpY2VzL3RpbWUuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sT0FBTyxDQUFDO0FBR2pDLElBQWEsV0FBVyxHQUF4QixNQUFhLFdBQVc7SUFFcEI7UUFHQSwwQkFBcUIsR0FBRyxDQUFDLElBQUksRUFBRSxjQUFjLEVBQU8sRUFBRTtZQUNsRCxNQUFNLE9BQU8sR0FBRyxRQUFRLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxFQUFFLElBQUksRUFBRSxjQUFjLEVBQUUsQ0FBQyxDQUFDO1lBQ2pFLE1BQU0sVUFBVSxHQUFHLFFBQVEsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUM7WUFDeEQsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7UUFDdEQsQ0FBQyxDQUFBO1FBRUQsb0JBQWUsR0FBRyxDQUFDLEdBQUcsRUFBTyxFQUFFO1lBQzNCLE1BQU0sR0FBRyxHQUFHLENBQUMsR0FBRyxDQUFDLGlCQUFpQixFQUFFLEVBQ2hDLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFDMUIsR0FBRyxHQUFHLFVBQVUsR0FBRztnQkFDZixNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztnQkFDdkMsT0FBTyxDQUFDLElBQUksR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDO1lBQ3pDLENBQUMsQ0FBQztZQUNOLE9BQU8sR0FBRyxDQUFDLFdBQVcsRUFBRTtrQkFDbEIsR0FBRyxHQUFHLEdBQUcsQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLEdBQUcsQ0FBQyxDQUFDO2tCQUM3QixHQUFHLEdBQUcsR0FBRyxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsQ0FBQztrQkFDeEIsR0FBRyxHQUFHLEdBQUcsQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLENBQUM7a0JBQ3pCLEdBQUcsR0FBRyxHQUFHLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBRSxDQUFDO2tCQUMzQixHQUFHLEdBQUcsR0FBRyxDQUFDLEdBQUcsQ0FBQyxVQUFVLEVBQUUsQ0FBQztrQkFDM0IsTUFBTTtrQkFDTixHQUFHLEdBQUcsR0FBRyxDQUFDLEdBQUcsR0FBRyxFQUFFLENBQUM7a0JBQ25CLEdBQUcsQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDLENBQUM7UUFDeEIsQ0FBQyxDQUFBO0lBeEJELENBQUM7Q0F5QkosQ0FBQTtBQTVCWSxXQUFXO0lBRHZCLFVBQVUsRUFBRTs7R0FDQSxXQUFXLENBNEJ2QjtTQTVCWSxXQUFXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRGF0ZVRpbWUgfSBmcm9tICdsdXhvbic7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBUaW1lU2VydmljZSB7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICB9XG5cbiAgICBjb252ZXJ0RGF0ZVRvVGltZXpvbmUgPSAoZGF0ZSwgdGltZVpvbmVPZmZzZXQpOiBhbnkgPT4ge1xuICAgICAgICBjb25zdCBkYXRlVmFyID0gRGF0ZVRpbWUuZnJvbUlTTyhkYXRlLCB7IHpvbmU6IHRpbWVab25lT2Zmc2V0IH0pO1xuICAgICAgICBjb25zdCBkYXRlU3RyaW5nID0gRGF0ZVRpbWUuZnJvbUlTTyhkYXRlVmFyKS50b1N0cmluZygpO1xuICAgICAgICByZXR1cm4gdGhpcy5mb3JtYXRMb2NhbERhdGUobmV3IERhdGUoZGF0ZVN0cmluZykpO1xuICAgIH1cblxuICAgIGZvcm1hdExvY2FsRGF0ZSA9IChub3cpOiBhbnkgPT4ge1xuICAgICAgICBjb25zdCB0em8gPSAtbm93LmdldFRpbWV6b25lT2Zmc2V0KCksXG4gICAgICAgICAgICBkaWYgPSB0em8gPj0gMCA/ICcrJyA6ICctJyxcbiAgICAgICAgICAgIHBhZCA9IGZ1bmN0aW9uIChudW0pIHtcbiAgICAgICAgICAgICAgICBjb25zdCBub3JtID0gTWF0aC5hYnMoTWF0aC5mbG9vcihudW0pKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gKG5vcm0gPCAxMCA/ICcwJyA6ICcnKSArIG5vcm07XG4gICAgICAgICAgICB9O1xuICAgICAgICByZXR1cm4gbm93LmdldEZ1bGxZZWFyKClcbiAgICAgICAgICAgICsgJy0nICsgcGFkKG5vdy5nZXRNb250aCgpICsgMSlcbiAgICAgICAgICAgICsgJy0nICsgcGFkKG5vdy5nZXREYXRlKCkpXG4gICAgICAgICAgICArICdUJyArIHBhZChub3cuZ2V0SG91cnMoKSlcbiAgICAgICAgICAgICsgJzonICsgcGFkKG5vdy5nZXRNaW51dGVzKCkpXG4gICAgICAgICAgICArICc6JyArIHBhZChub3cuZ2V0U2Vjb25kcygpKVxuICAgICAgICAgICAgKyAnLjAwMCdcbiAgICAgICAgICAgICsgZGlmICsgcGFkKHR6byAvIDYwKVxuICAgICAgICAgICAgKyBwYWQodHpvICUgNjApO1xuICAgIH1cbn1cbiJdfQ==