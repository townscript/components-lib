import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { HttpClient, HttpParams } from '@angular/common/http';
import { config } from '../../../../core/app-config';
let FooterService = class FooterService {
    constructor(http) {
        this.http = http;
        this.baseUrl = config.baseUrl;
        this.listingsUrl = this.baseUrl + 'listings/';
        this.getPopularEvents = (lat, long, filter) => {
            const params = new Object();
            params['lat'] = lat ? lat : 1;
            params['lng'] = long ? long : 2;
            params['radarDistance'] = 50;
            params['page'] = 0;
            params['size'] = 8;
            return this.http.post(this.listingsUrl + 'event/radar', filter ? filter : {}, { params: params }).toPromise();
        };
        this.getCityFromCityCode = (code) => {
            return this.http.get(this.listingsUrl + 'place/city?code=' + code).toPromise();
        };
        this.getAllPopularCities = () => {
            return this.http.get(this.listingsUrl + 'city/popular').toPromise();
        };
    }
};
FooterService.ctorParameters = () => [
    { type: HttpClient }
];
FooterService = tslib_1.__decorate([
    Injectable()
], FooterService);
export { FooterService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHMtZm9vdGVyLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdG93bnNjcmlwdC9jb21wb25lbnRzLyIsInNvdXJjZXMiOlsic3JjL2FwcC9tb2R1bGVzL2xheW91dC9jb21wb25lbnRzL3RzLWZvb3Rlci90cy1mb290ZXIuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsVUFBVSxFQUFFLFVBQVUsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQzlELE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUdyRCxJQUFhLGFBQWEsR0FBMUIsTUFBYSxhQUFhO0lBSXRCLFlBQW9CLElBQWdCO1FBQWhCLFNBQUksR0FBSixJQUFJLENBQVk7UUFGcEMsWUFBTyxHQUFXLE1BQU0sQ0FBQyxPQUFPLENBQUM7UUFDakMsZ0JBQVcsR0FBVyxJQUFJLENBQUMsT0FBTyxHQUFHLFdBQVcsQ0FBQztRQUlqRCxxQkFBZ0IsR0FBRyxDQUFDLEdBQVEsRUFBRSxJQUFTLEVBQUUsTUFBWSxFQUFnQixFQUFFO1lBQ3JFLE1BQU0sTUFBTSxHQUFXLElBQUksTUFBTSxFQUFFLENBQUM7WUFDbEMsTUFBTSxDQUFDLEtBQUssQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDOUIsTUFBTSxDQUFDLEtBQUssQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDaEMsTUFBTSxDQUFDLGVBQWUsQ0FBQyxHQUFHLEVBQUUsQ0FBQztZQUM3QixNQUFNLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ25CLE1BQU0sQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDckIsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxHQUFHLGFBQWEsRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUMsTUFBTSxFQUFjLE1BQU0sRUFBQyxDQUFDLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDMUgsQ0FBQyxDQUFBO1FBRUQsd0JBQW1CLEdBQUcsQ0FBQyxJQUFZLEVBQWUsRUFBRTtZQUNsRCxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxXQUFXLEdBQUcsa0JBQWtCLEdBQUMsSUFBSSxDQUFDLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDL0UsQ0FBQyxDQUFBO1FBRUQsd0JBQW1CLEdBQUcsR0FBaUIsRUFBRTtZQUNyQyxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxXQUFXLEdBQUcsY0FBYyxDQUFDLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDeEUsQ0FBQyxDQUFBO0lBbEJELENBQUM7Q0FtQkosQ0FBQTs7WUFwQjZCLFVBQVU7O0FBSjNCLGFBQWE7SUFEekIsVUFBVSxFQUFFO0dBQ0EsYUFBYSxDQXdCekI7U0F4QlksYUFBYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEh0dHBDbGllbnQsIEh0dHBQYXJhbXMgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5pbXBvcnQgeyBjb25maWcgfSBmcm9tICcuLi8uLi8uLi8uLi9jb3JlL2FwcC1jb25maWcnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgRm9vdGVyU2VydmljZSB7XG5cbiAgICBiYXNlVXJsOiBzdHJpbmcgPSBjb25maWcuYmFzZVVybDtcbiAgICBsaXN0aW5nc1VybDogc3RyaW5nID0gdGhpcy5iYXNlVXJsICsgJ2xpc3RpbmdzLyc7XG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBodHRwOiBIdHRwQ2xpZW50KSB7XG4gICAgfVxuXG4gICAgZ2V0UG9wdWxhckV2ZW50cyA9IChsYXQ6IGFueSwgbG9uZzogYW55LCBmaWx0ZXI/OiBhbnkpOiBQcm9taXNlPGFueT4gPT4ge1xuICAgICAgY29uc3QgcGFyYW1zOiBPYmplY3QgPSBuZXcgT2JqZWN0KCk7XG4gICAgICAgIHBhcmFtc1snbGF0J10gPSBsYXQgPyBsYXQgOiAxO1xuICAgICAgICBwYXJhbXNbJ2xuZyddID0gbG9uZyA/IGxvbmcgOiAyO1xuICAgICAgICBwYXJhbXNbJ3JhZGFyRGlzdGFuY2UnXSA9IDUwO1xuICAgICAgICBwYXJhbXNbJ3BhZ2UnXSA9IDA7XG4gICAgICAgIHBhcmFtc1snc2l6ZSddID0gODsgICAgICAgIFxuICAgICAgcmV0dXJuIHRoaXMuaHR0cC5wb3N0KHRoaXMubGlzdGluZ3NVcmwgKyAnZXZlbnQvcmFkYXInLCBmaWx0ZXIgPyBmaWx0ZXIgOiB7fSwge3BhcmFtczogPEh0dHBQYXJhbXM+cGFyYW1zfSkudG9Qcm9taXNlKCk7XG4gICAgfVxuXG4gICAgZ2V0Q2l0eUZyb21DaXR5Q29kZSA9IChjb2RlOiBzdHJpbmcpOlByb21pc2U8YW55PiA9PiB7XG4gICAgICByZXR1cm4gdGhpcy5odHRwLmdldCh0aGlzLmxpc3RpbmdzVXJsICsgJ3BsYWNlL2NpdHk/Y29kZT0nK2NvZGUpLnRvUHJvbWlzZSgpO1xuICAgIH1cblxuICAgIGdldEFsbFBvcHVsYXJDaXRpZXMgPSAoKTogUHJvbWlzZTxhbnk+ID0+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQodGhpcy5saXN0aW5nc1VybCArICdjaXR5L3BvcHVsYXInKS50b1Byb21pc2UoKTtcbiAgICB9XG59XG4iXX0=