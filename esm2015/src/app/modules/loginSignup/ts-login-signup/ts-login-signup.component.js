import { __awaiter, __decorate } from "tslib";
import { Component, ViewChild, EventEmitter, Output, Input, ViewEncapsulation } from '@angular/core';
import { config } from '../../../core/app-config';
import { Validators, FormGroup, FormControl } from '@angular/forms';
import { DateTime } from 'luxon';
import { CookieService } from '../../../core/cookie.service';
import { UserService } from '../../../shared/services/user-service';
import { NotificationService } from '../../../shared/services/notification.service';
import { TsLoginSignupService } from './ts-login-signup.service';
import { PlaceService } from '../../layout/components/ts-header/place.service';
import { UtilityService } from '../../../shared/services/utilities.service';
import { ActivatedRoute } from '@angular/router';
const emailRegex = '^[a-z0-9]+(\.[_a-z0-9]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,15})$';
let TsLoginSignupComponent = class TsLoginSignupComponent {
    constructor(utilityService, cookieService, userService, notificationService, tsLoginSignupService, placeService, activatedRoute) {
        this.utilityService = utilityService;
        this.cookieService = cookieService;
        this.userService = userService;
        this.notificationService = notificationService;
        this.tsLoginSignupService = tsLoginSignupService;
        this.placeService = placeService;
        this.activatedRoute = activatedRoute;
        this.defaultHeader = 'Let\'s get started';
        this.defaultSubHeader = 'Your one stop tool for organizing events';
        this.showSocial = true;
        this.closeDialog = new EventEmitter();
        this.captchaToken = this.tsLoginSignupService.CAPTCHA_SITE_INVISIBLE_CAPTCHA_KEY;
        this.show = false;
        this.showPassword = false;
        this.isDefaultView = true;
        this.isSignInView = false;
        this.isSignUpView = false;
        this.isVerifyEmailView = false;
        this.showResetPassword = false;
        this.userTimezone = DateTime.local().zoneName;
        this.correctPhoneNumber = null;
        this.phoneError = false;
        this.socialLoginMsg = false;
        this.signInErrMessage = '';
        this.resetPwdLinkSent = false;
        this.signUpErrMessage = '';
        this.fbLoginURL = config.baseUrl + 'api/'
            + 'user/signinwithfacebook';
        this.googleLoginURL = config.baseUrl + 'api/'
            + 'user/signinwithgoogle';
        this.showLoader = false;
        this.countryCode = 'IN';
        this.showConfirmation = false;
        this.baseUrl = this.tsLoginSignupService.baseUrl;
        this.initForm = () => {
            this.loginForm = new FormGroup({
                'fullName': new FormControl('', { validators: Validators.required }),
                'email': new FormControl('', { validators: [Validators.required, Validators.pattern(emailRegex)] }),
                'password': new FormControl('', { validators: Validators.required }),
                'phoneNumber': new FormControl('', { validators: Validators.required })
            });
            this.loginForm.get('fullName').disable();
            this.loginForm.get('password').disable();
            this.loginForm.get('phoneNumber').disable();
        };
        this.close = (signedIn) => {
            this.closeDialog.emit(signedIn);
        };
        this.clearErrors = () => {
            this.socialLoginMsg = '';
        };
        this.resolve = (captchaResponse) => {
            this.captchaResponse = captchaResponse;
        };
        this.password = () => {
            this.show = !this.show;
        };
        this.verifyEmail = () => __awaiter(this, void 0, void 0, function* () {
            this.showLoader = true;
            if (!this.loginForm.controls.email.valid) {
                this.showLoader = false;
                return;
            }
            const result = yield this.tsLoginSignupService.getUserSignUpDetails(this.loginForm.value.email);
            let newData = result;
            try {
                this.showLoader = false;
                newData = JSON.parse(result.data);
            }
            catch (e) {
                console.log("Exception while parsing api response : " + result);
            }
            if (newData && newData.isExistingUser && newData.isManualSignup && !newData.isTemporaryUser) {
                this.openSignInView();
            }
            else if (newData && newData.isExistingUser && !newData.isManualSignup && !newData.isTemporaryUser) {
                this.socialLoginMsg = true;
            }
            else {
                this.openSignUpView();
                this.initializeTelInput = setTimeout(() => {
                    this.initializeIntlTelInput();
                }, 200);
            }
        });
        this.initializeIntlTelInput = () => {
            // initialize intl tel
            const input = document.querySelector('#phoneNumber');
            this.intlInput = window.intlTelInput(input, {
                initialCountry: this.countryCode,
                preferredCountries: ["in", "id", "sg", "my"],
                utilScripts: '../../../../../../node_modules/intl-tel-input/build/js/utils.js'
            });
        };
        this.validatePhoneNumber = () => {
            if (!this.intlInput.isValidNumber()) {
                this.phoneError = true;
                this.loginForm.controls.phoneNumber.setErrors({ 'valid': false });
            }
            else {
                this.loginForm.controls.phoneNumber.setErrors();
                this.phoneError = false;
            }
        };
        this.signIn = () => __awaiter(this, void 0, void 0, function* () {
            if (!this.loginForm.valid) {
                return;
            }
            this.showLoader = true;
            const retData = yield this.tsLoginSignupService.loginWithTownscript(this.loginForm.value.email, this.loginForm.value.password);
            this.showLoader = false;
            if (retData.result != 'Success') {
                this.signInErrMessage = retData.data;
                return;
            }
            this.showConfirmation = true;
            const tokenData = {
                token: (retData.data)
            };
            const userData = Object.assign(Object.assign({}, retData.userDetails), tokenData);
            this.userName = userData.user;
            const isOrganizer = userData.isOrganizer;
            console.log(this.userName);
            this.userService.updateUser(userData);
            // this.cookieService.setCookie('townscript-user', JSON.stringify(userData), 90);
            setTimeout(() => {
                if (this.mode === 'dialog') {
                    this.close(true);
                }
                // no redirection needed ,in case of follow
                if (this.source != 'follow') {
                    if (this.rdurl != undefined) {
                        window.open(this.rdurl, '_self');
                        return;
                    }
                    if (isOrganizer) {
                        window.open('/dashboard', '_self');
                        return;
                    }
                }
            }, 1400);
        });
        this.signUp = () => __awaiter(this, void 0, void 0, function* () {
            const self = this;
            this.loginForm.get('email').setValue(this.loginForm.get('email').value.trim());
            this.loginForm.get('fullName').setValue(this.loginForm.get('fullName').value.trim());
            if (!this.loginForm.valid || this.captchaResponse == undefined) {
                return;
            }
            const input = document.querySelector('#phoneNumber');
            const iti = window.intlTelInputGlobals.getInstance(input);
            this.correctPhoneNumber = iti.getNumber();
            if (this.correctPhoneNumber === '') {
                this.phoneError = true;
                return;
            }
            this.showLoader = true;
            this.loaderText = 'Please wait while we are creating your account.';
            let data = yield this.tsLoginSignupService.registerWithTownscriptWithCaptcha(this.getFormDataForRegister());
            try {
                data = JSON.parse(data);
            }
            catch (e) {
                console.log("Exception while parsing api response : " + data);
            }
            if (data['result'] == 'Error') {
                self.showLoader = false;
                self.signUpErrMessage = data['data'];
                let _this = self;
                setTimeout(function () {
                    _this.initializeIntlTelInput();
                }, 200);
                return;
            }
            self.openVerifyEmailView();
        });
        this.getFormDataForRegister = () => {
            const formData = new FormData();
            formData.append('name', this.loginForm.value.fullName);
            formData.append('emailid', this.loginForm.value.email);
            formData.append('password', this.loginForm.value.password);
            formData.append('phone', this.correctPhoneNumber);
            formData.append('usertimezone', this.userTimezone);
            formData.append('reCaptcha', this.captchaResponse);
            formData.append('username', this.randomString(10, ''));
            if (this.rdurl) {
                formData.append('rdurl', this.rdurl);
            }
            return formData;
        };
        this.forgotPassword = () => {
            this.loginForm.get('password').disable();
            this.showResetPassword = true;
            this.showSocial = false;
            this.isSignInView = false;
        };
        this.goBack = () => {
            if (this.showResetPassword) {
                this.openSignInView();
            }
            else if (this.isSignInView || this.isSignUpView || this.isVerifyEmailView) {
                this.openDefaultView();
            }
            else {
                this.close(false);
            }
        };
        this.openSignInView = () => {
            this.showResetPassword = false;
            this.isSignUpView = false;
            this.isSignInView = true;
            this.loginForm.get('password').enable();
            this.showSocial = false;
            this.socialLoginMsg = false;
            this.isDefaultView = false;
        };
        this.openSignUpView = () => {
            this.isSignUpView = true;
            this.isSignInView = false;
            this.showSocial = false;
            this.isDefaultView = false;
            this.socialLoginMsg = false;
            this.loginForm.get('fullName').enable();
            this.loginForm.get('password').enable();
            this.loginForm.get('phoneNumber').enable();
        };
        this.openDefaultView = () => {
            this.isVerifyEmailView = false;
            this.isSignUpView = false;
            this.showResetPassword = false;
            this.isSignInView = false;
            this.showSocial = true;
            this.isDefaultView = true;
            this.loginForm.get('fullName').disable();
            this.loginForm.get('password').disable();
            this.loginForm.get('phoneNumber').disable();
        };
        this.openVerifyEmailView = () => {
            this.isVerifyEmailView = true;
            this.showLoader = false;
            this.showSocial = false;
            this.isSignUpView = false;
        };
        this.resetPassword = () => __awaiter(this, void 0, void 0, function* () {
            this.showLoader = true;
            this.loginForm.get('email').setValue(this.loginForm.get('email').value.trim());
            this.loaderText = 'Sending Reset Password Link to ' + this.loginForm.value.email;
            const resp = yield this.tsLoginSignupService.sendForgotPwdEmail(this.loginForm.value.email);
            this.showLoader = false;
            if (this.resetPwdLinkSent) {
                this.notificationService.success('Reset Password Link has been sent', 2000, 'Dismiss');
            }
            this.resetPwdLinkSent = true;
            if (localStorage.getItem('email')) {
                localStorage.removeItem('email');
            }
            localStorage.setItem('email', this.loginForm.get('email').value.trim());
        });
        this.randomString = (len, an) => {
            an = an && an.toLowerCase();
            let str = '', i = 0;
            const min = an === 'a' ? 10 : 0;
            const max = an === 'n' ? 10 : 62;
            while (i < len) {
                let r = Math.random() * (max - min) + min << 0;
                str += String.fromCharCode(r += r > 9 ? r < 36 ? 55 : 61 : 48);
                i++;
            }
            return str;
        };
        this.resendVerifyEmail = () => __awaiter(this, void 0, void 0, function* () {
            this.showLoader = true;
            this.loginForm.get('email').setValue(this.loginForm.get('email').value.trim());
            this.loaderText = 'Sending Verification email to ' + this.loginForm.value.email;
            const retData = this.tsLoginSignupService.resendVerificationCode(this.rdurl, this.loginForm.value.email);
            this.showLoader = false;
            this.notificationService.success('Verification email has been sent', 2000, 'Dismiss');
        });
        this.togglePasswordDisplay = () => {
            this.showPassword = !this.showPassword;
            const pwdInput = document.getElementById('user-pwd');
            pwdInput.type = this.showPassword ? 'text' : 'password';
        };
        this.checkIfRdUrlIsLegit = () => {
            if (this.isPathAbsolute(this.rdurl)) {
                let url = new URL(this.rdurl);
                if (url.host.indexOf("townscript.com") == -1) {
                    this.rdurl = '/';
                }
            }
        };
        this.isPathAbsolute = (path) => {
            return /^(?:\/|[a-z]+:\/\/)/.test(path);
        };
    }
    ngOnInit() {
        this.initForm();
        this.subObject = this.placeService.place.subscribe((res) => {
            if (this.utilityService.IsJsonString(res)) {
                const placeData = JSON.parse(res);
                this.countryCode = placeData['country'];
            }
        });
        this.activatedRoute.queryParams.subscribe(params => {
            if (params['rdurl']) {
                this.rdurl = params['rdurl'];
                this.rdurl = decodeURIComponent(this.rdurl);
                this.rdurl = this.rdurl.replace("[", "%5B");
                this.rdurl = this.rdurl.replace("]", "%5D");
            }
            this.checkIfRdUrlIsLegit();
        });
    }
    ngOnChanges(changes) {
        if (changes['rdurl']) {
            this.fbLoginURL = config.baseUrl + 'api/'
                + 'user/signinwithfacebook' + (this.rdurl == undefined ? '' : '?rdurl=' + this.rdurl);
            this.googleLoginURL = config.baseUrl + 'api/'
                + 'user/signinwithgoogle' + (this.rdurl == undefined ? '' : '?rdurl=' + this.rdurl);
            this.checkIfRdUrlIsLegit();
        }
    }
    ngAfterContentInit() {
    }
    ngOnDestroy() {
        if (this.subObject !== undefined) {
            this.subObject.unsubscribe();
        }
    }
};
TsLoginSignupComponent.ctorParameters = () => [
    { type: UtilityService },
    { type: CookieService },
    { type: UserService },
    { type: NotificationService },
    { type: TsLoginSignupService },
    { type: PlaceService },
    { type: ActivatedRoute }
];
__decorate([
    Input()
], TsLoginSignupComponent.prototype, "mode", void 0);
__decorate([
    Input()
], TsLoginSignupComponent.prototype, "defaultHeader", void 0);
__decorate([
    Input()
], TsLoginSignupComponent.prototype, "defaultSubHeader", void 0);
__decorate([
    Input()
], TsLoginSignupComponent.prototype, "rdurl", void 0);
__decorate([
    Input()
], TsLoginSignupComponent.prototype, "showSocial", void 0);
__decorate([
    Input()
], TsLoginSignupComponent.prototype, "source", void 0);
__decorate([
    Output()
], TsLoginSignupComponent.prototype, "closeDialog", void 0);
__decorate([
    ViewChild('recaptchaRef', { read: true, static: true })
], TsLoginSignupComponent.prototype, "recaptchaRef", void 0);
TsLoginSignupComponent = __decorate([
    Component({
        selector: 'app-ts-login-signup',
        template: "<div class=\"login-signup-view px-5\" id=\"login-signup-view\">\n  <div class=\"view-header\" *ngIf=\"!showLoader && !showConfirmation\">\n    <div class=\"back-button text-gray-700 text-xl md:text-2xl lg:text-3xl -ml-1\" *ngIf=\"mode == 'dialog'\">\n      <i appDataAnalytics eventLabel=\"loginBack\" clickLocation=\"\" class=\"mdi mdi-arrow-left cursor-pointer\"\n        (click)=\"goBack()\"></i>\n    </div>\n    <div class=\"initial-header flex flex-col fadeIn\" *ngIf=\"isDefaultView\">\n      <div class=\"primary-header text-gray-800 text-lg md:text-xl lg:text-2xl font-semibold\">{{defaultHeader}}</div>\n      <div class=\"secondary-header text-gray-600 text-xs md:text-sm lg:text-sm\">{{defaultSubHeader}}</div>\n    </div>\n    <div class=\"sign-in-header flex flex-col fadeIn\" *ngIf=\"isSignInView\">\n      <div class=\"primary-header text-gray-800 text-lg md:text-xl lg:text-2xl font-semibold\">Sign In</div>\n      <div class=\"secondary-header text-gray-600 text-xs md:text-sm lg:text-sm\">Welcome to Townscript</div>\n    </div>\n\n    <div class=\"forgot-pwd-header flex flex-col fadeIn\" *ngIf=\"showResetPassword\">\n      <div class=\"primary-header text-gray-800 text-lg md:text-xl lg:text-2xl font-semibold\">Forgot Password?</div>\n      <div class=\"secondary-header text-gray-600 text-xs md:text-sm lg:text-sm\">Don\u2019t worry, we\u2019ll help you reset it\n      </div>\n    </div>\n\n    <div class=\"sign-up-header flex flex-col fadeIn\" *ngIf=\"isSignUpView\">\n      <div class=\"primary-header text-gray-800 text-lg md:text-xl lg:text-2xl font-semibold\">Sign Up</div>\n      <div class=\"secondary-header text-gray-600 text-xs md:text-sm lg:text-sm\">Welcome to Townscript</div>\n    </div>\n\n    <div class=\"verify-email-header flex flex-col fadeIn\" *ngIf=\"isVerifyEmailView\">\n      <div class=\"primary-header text-gray-800 text-lg md:text-xl lg:text-2xl font-semibold\">You're almost done</div>\n      <div class=\"secondary-header text-gray-600 text-xs md:text-sm lg:text-sm\">We just need to verify your e-mail</div>\n    </div>\n  </div>\n  <div class=\"ts-loader flex flex-col items-center justify-center p-10\" *ngIf=\"showLoader\">\n    <mat-spinner></mat-spinner>\n    <div class=\"py-5 text-gray-700 text-sm\">{{loaderText}}</div>\n  </div>\n  <div class=\"confirmation flex flex-col items-center justify-center p-10\" *ngIf=\"showConfirmation\">\n    <app-confirmation-svg></app-confirmation-svg>\n    <div class=\"pt-5 text-gray-700 text-lg lg:text-xl font-semibold flex flex-wrap items-center justify-center\">\n      <div>Welcome back{{userName?.length <= 15 ? ',' : '' }}</div>\n          <div *ngIf=\"userName?.length <= 15\">\n            <span class=\"ml-1\">{{userName}}</span>\n          </div>\n          !\n      </div>\n    </div>\n    <div class=\"view-body pt-5\" *ngIf=\"!showLoader && !showConfirmation\">\n      <div class=\"default-view-body py-2 fadeInUp\" *ngIf=\"isDefaultView\">\n        <form id=\"loginForm\" [formGroup]=\"loginForm\" class=\"w-full login-form\">\n          <div class=\"form-group md:flex md:items-center \">\n            <div class=\"w-full\">\n              <mat-form-field class=\"w-full\">\n                <input formControlName=\"email\" matInput\n                  class=\"form-control bg-white border-gray-500 rounded py-2 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\"\n                  id=\"email\" type=\"email\" name=\"email\" placeholder=\"Email\" (ngModelChange)=\"clearErrors()\">\n              </mat-form-field>\n              <p class=\"text-xs text-red-500 -mt-3 mb-2\" *ngIf=\"socialLoginMsg\">\n                It seems you have signed up using Social Login.\n              </p>\n              <p class=\"text-xs text-red-500 -mt-3 mb-2\"\n                *ngIf=\"loginForm.get('email').hasError('required') && (loginForm.get('email').dirty || loginForm.get('email').touched)\">\n                Email Id is required\n              </p>\n              <p class=\"text-xs text-red-500 -mt-3 mb-2\"\n                *ngIf=\"loginForm.get('email').hasError('pattern') && (loginForm.get('email').dirty || loginForm.get('email').touched)\">\n                Please enter a valid email address\n              </p>\n            </div>\n          </div>\n          <div class=\"form-group w-full text-center\">\n            <button appDataAnalytics eventLabel=\"loginContinue\" clickLocation=\"\" matRipple (click)=\"verifyEmail()\"\n              [ngClass]=\"!loginForm.controls.email.valid ? 'opacity-50 pointer-events-none': ''\"\n              class=\"w-full btn-cta p-2 mb-2 font-semibold\">Continue\n            </button>\n          </div>\n\n          <div class=\"form-group strike-through strike-through-margin\">\n            <div class=\"text-gray-700 text-base md:text-lg lg:text-xl\">\n              <span class=\"or-text\">OR</span>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <a appDataAnalytics [eventLabel]=\"'loginGoogle'\" [clickLocation]=\"\" [href]=\"googleLoginURL\" target=\"_self\"\n              class=\"bg-white w-full p-2 flex border border-gray-400 rounded shadow mb-2 items-center justify-center\"\n              matRipple>\n              <div class=\"px-2\">\n                <img class=\"logo\"\n                  src=\"https://townscript-common-resources.s3.ap-south-1.amazonaws.com/google-min.png\" />\n              </div>\n              <div class=\"text-sm text-gray-700\">\n                <span class=\"no-margin\">Continue with Google</span>\n              </div>\n            </a>\n            <p class=\"form-control--error\" ng-if=\"googleError.length\" ng-bind=\"googleError\"></p>\n          </div>\n          <div class=\"form-group\">\n            <a appDataAnalytics eventLabel=\"loginFacebook\" clickLocation=\"\" [href]=\"fbLoginURL\" target=\"_self\"\n              class=\"bg-white w-full p-2 flex border border-gray-400 rounded shadow mb-2 items-center justify-center\"\n              ts-data-analytics prop-event=\"click\" eventLabel=\"Login with Facebook\" prop-clicked-location=\"Sign In\"\n              matRipple>\n              <div class=\"px-2\">\n                <img class=\"logo\"\n                  src=\"https://townscript-common-resources.s3.ap-south-1.amazonaws.com/facebook-min.png\" />\n              </div>\n              <div class=\"text-sm text-gray-700\">\n                <span class=\"no-margin\">Continue with Facebook</span>\n              </div>\n            </a>\n            <ng-container class=\"login-error\" ng-if=\"fbError.length\">\n              <i class=\"ion-android-alert\"></i>\n              <p class=\"form-control--error\" ng-bind=\"fbError\"></p>\n            </ng-container>\n          </div>\n\n        </form>\n      </div>\n      <div class=\"signin-view-body py-2 fadeInUp\" *ngIf=\"isSignInView\">\n        <form id=\"formId\" [formGroup]=\"loginForm\" class=\"w-full login-form\">\n          <div class=\"form-group md:flex md:items-center \">\n            <div class=\"w-full\">\n              <mat-form-field class=\"w-full\">\n                <input formControlName=\"email\" matInput\n                  class=\"form-control bg-white border-gray-500 rounded py-2 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\"\n                  id=\"email\" type=\"email\" name=\"email\" placeholder=\"Email\">\n              </mat-form-field>\n              <p class=\"text-xs text-red-500 -mt-3 mb-2\" *ngIf=\"socialLoginMsg\">\n                It seems you have signed up using Social Login.\n              </p>\n              <p class=\"text-xs text-red-500 -mt-3 mb-2\"\n                *ngIf=\"loginForm.get('email').hasError('required') && (loginForm.get('email').dirty || loginForm.get('email').touched)\">\n                Email Id is required\n              </p>\n              <p class=\"text-xs text-red-500 -mt-3 mb-2\"\n                *ngIf=\"loginForm.get('email').hasError('pattern') && (loginForm.get('email').dirty || loginForm.get('email').touched)\">\n                Please enter a valid email address\n              </p>\n            </div>\n          </div>\n          <div class=\"form-group md:flex md:items-center \">\n            <div class=\"w-full\">\n              <mat-form-field class=\"w-full relative\">\n                <input formControlName=\"password\" matInput autofocus\n                  class=\"form-control bg-white border-gray-500 rounded py-2 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\"\n                  id=\"user-pwd\" [type]=\"'password'\" placeholder=\"Password\" autocomplete=\"current-password\">\n                <i appDataAnalytics eventLabel=\"loginShowPass\" clickLocation=\"\"\n                  class=\"text-lg mdi absolute right-0 text-gray-700\"\n                  [ngClass]=\" showPassword ? 'mdi-eye-off' : 'mdi-eye'\" (click)=\"togglePasswordDisplay()\"></i>\n              </mat-form-field>\n              <p class=\"text-xs text-red-500 -mt-3 mb-2\"\n                *ngIf=\"loginForm.get('password').hasError('required') && (loginForm.get('password').dirty || loginForm.get('password').touched)\">\n                Password is required\n              </p>\n            </div>\n          </div>\n          <div class=\"w-full text-center form-group\">\n            <p class=\"text-left text-sm text-red-500 -mt-3 mb-2\" *ngIf=\"signInErrMessage.length > 0\">\n              {{signInErrMessage}}</p>\n            <button appDataAnalytics eventLabel=\"loginSignin\" clickLocation=\"\" matRipple (click)=\"signIn()\"\n              [ngClass]=\"!loginForm.valid ? 'opacity-50 pointer-events-none': ''\"\n              class=\"w-full btn-cta p-2 mb-2 font-semibold\">Sign In\n            </button>\n            <div appDataAnalytics eventLabel=\"loginForgot\" clickLocation=\"\"\n              class=\"text-sm text-center text-gray-700 p-1\">\n              <span class=\"cursor-pointer hover:underline\" (click)=\"forgotPassword()\">Forgot Password?</span>\n            </div>\n          </div>\n        </form>\n      </div>\n      <div class=\"reset-pwd-view-body py-2 fadeInUp\" *ngIf=\"showResetPassword\">\n        <form id=\"formId\" [formGroup]=\"loginForm\" class=\"w-full login-form\">\n          <div class=\"form-group md:flex md:items-center\" *ngIf=\"!resetPwdLinkSent\">\n            <div class=\"w-full\">\n              <mat-form-field class=\"w-full\">\n                <input formControlName=\"email\" matInput\n                  class=\"form-control bg-white border-gray-500 rounded py-2 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\"\n                  id=\"email\" type=\"email\" name=\"email\" placeholder=\"Email\">\n              </mat-form-field>\n              <p class=\"text-xs text-red-500 -mt-3 mb-2\"\n                *ngIf=\"loginForm.get('email').hasError('required') && (loginForm.get('email').dirty || loginForm.get('email').touched)\">\n                Email Id is required\n              </p>\n              <p class=\"text-xs text-red-500 -mt-3 mb-2\"\n                *ngIf=\"loginForm.get('email').hasError('pattern') && (loginForm.get('email').dirty || loginForm.get('email').touched)\">\n                Please enter a valid email address\n              </p>\n            </div>\n          </div>\n          <div class=\"link-sent fadeIn\" *ngIf=\"resetPwdLinkSent\">\n            <div class=\"p-2 flex items-center justify-center -mt-8 primary-header\">\n              <app-email-sent></app-email-sent>\n            </div>\n            <div class=\"p-2 text-gray-700 text-sm text-center secondary-header\">Password reset link has been sent to\n              {{loginForm.value.email}}</div>\n          </div>\n          <div class=\"w-full text-center form-group\">\n            <button appDataAnalytics eventLabel=\"loginResetBtn\" clickLocation=\"\" matRipple *ngIf=\"!resetPwdLinkSent\"\n              (click)=\"resetPassword()\"\n              [ngClass]=\"!loginForm.controls.email.valid ? 'opacity-50 pointer-events-none': ''\"\n              class=\"w-full btn-cta p-2 mb-2 font-semibold\">Send Reset Password Link\n            </button>\n            <div (click)=\"resetPassword()\"\n              class=\"color-blue font-semibold text-sm text-center resend-email py-2 px-2 hover:underline cursor-pointer\"\n              *ngIf=\"resetPwdLinkSent\">\n              Resend Email\n            </div>\n          </div>\n        </form>\n      </div>\n      <div class=\"signup-view-body py-2 fadeInUp\" *ngIf=\"isSignUpView\">\n        <form id=\"formId\" [formGroup]=\"loginForm\" class=\"w-full login-form\">\n          <div class=\"form-group md:flex md:items-center \">\n            <div class=\"w-full\">\n              <mat-form-field class=\"w-full\">\n                <input formControlName=\"email\" matInput\n                  class=\"form-control bg-white border-gray-500 rounded py-2 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\"\n                  id=\"email\" type=\"email\" name=\"email\" placeholder=\"Email\">\n              </mat-form-field>\n              <p class=\"text-xs text-red-500 -mt-3 mb-2\" *ngIf=\"socialLoginMsg\">\n                It seems you have signed up using Social Login.\n              </p>\n              <p class=\"text-xs text-red-500 -mt-3 mb-2\"\n                *ngIf=\"loginForm.get('email').hasError('required') && (loginForm.get('email').dirty || loginForm.get('email').touched)\">\n                Email Id is required\n              </p>\n              <p class=\"text-xs text-red-500 -mt-3 mb-2\"\n                *ngIf=\"loginForm.get('email').hasError('pattern') && (loginForm.get('email').dirty || loginForm.get('email').touched)\">\n                Please enter a valid email address\n              </p>\n            </div>\n          </div>\n          <div class=\"form-group md:flex md:items-center \">\n            <div class=\"w-full\">\n              <mat-form-field class=\"w-full relative\">\n                <input formControlName=\"password\" matInput autofocus\n                  class=\"form-control bg-white border-gray-500 rounded py-2 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\"\n                  id=\"user-pwd\" [type]=\"'password'\" placeholder=\"Password\" autocomplete=\"current-password\">\n                <i appDataAnalytics eventLabel=\"loginShowPass\" clickLocation=\"\"\n                  class=\"text-lg mdi absolute right-0 text-gray-700\"\n                  [ngClass]=\" showPassword ? 'mdi-eye-off' : 'mdi-eye'\" (click)=\"togglePasswordDisplay()\"></i>\n              </mat-form-field>\n              <p class=\"text-xs text-red-500 -mt-3 mb-2\"\n                *ngIf=\"loginForm.get('password').hasError('required') && (loginForm.get('password').dirty || loginForm.get('password').touched)\">\n                Password is required\n              </p>\n            </div>\n          </div>\n          <div class=\"form-group md:flex md:items-center \">\n            <div class=\"w-full\">\n              <mat-form-field class=\"w-full relative\">\n                <input formControlName=\"fullName\" matInput\n                  class=\"form-control bg-white border-gray-500 rounded py-2 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\"\n                  id=\"name\" type=\"text\" placeholder=\"Full Name\">\n              </mat-form-field>\n              <p class=\"text-xs text-red-500 -mt-3 mb-2\"\n                *ngIf=\"loginForm.get('fullName').hasError('required') && (loginForm.get('fullName').dirty || loginForm.get('fullName').touched)\">\n                Full Name is required\n              </p>\n            </div>\n          </div>\n          <div class=\"form-group md:flex md:items-center relative z-50\">\n            <div class=\"w-full\">\n              <mat-form-field class=\"w-full relative z-50\" floatLabel=\"always\">\n                <input type=\"tel\" formControlName=\"phoneNumber\" matInput\n                  class=\"form-control bg-white border-gray-500 rounded py-2 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500 ml-10\"\n                  id=\"phoneNumber\" placeholder=\"Phone no.\" (ngModelChange)=\"validatePhoneNumber()\">\n              </mat-form-field>\n              <p class=\"text-xs text-red-500 mb-2 -mt-3\"\n                *ngIf=\"loginForm.get('phoneNumber').hasError('required') && (loginForm.get('phoneNumber').dirty || loginForm.get('phoneNumber').touched)\">\n                Phone Number is required\n              </p>\n              <p class=\"text-xs text-red-500 mb-2 -mt-3\" *ngIf=\"phoneError\">Please enter a valid Phone no.</p>\n            </div>\n          </div>\n          <div class=\"form-group md:flex md:items-center mb-3 relative z-0\">\n            <div class=\"w-full flex items-center justify-center md:justify-start\">\n              <re-captcha (resolved)=\"resolve($event)\" [siteKey]=\"captchaToken\">\n              </re-captcha>\n            </div>\n          </div>\n          <div class=\"w-full text-center form-group relative z-0\">\n            <button matRipple\n              [ngClass]=\"!loginForm.valid || phoneError || captchaResponse == undefined ? 'opacity-50 pointer-events-none': ''\"\n              (click)=\"signUp()\" class=\"w-full btn-cta p-2 mb-2 font-semibold\">\n              Create your account\n            </button>\n            <p class=\"text-left text-sm -mt-1 text-red-500\" *ngIf=\"signUpErrMessage.length > 0\">{{signUpErrMessage}}</p>\n          </div>\n        </form>\n      </div>\n\n      <div class=\"verify-email-view-body py-2 fadeInUp\" *ngIf=\"isVerifyEmailView\">\n        <form id=\"formId\" [formGroup]=\"loginForm\" class=\"w-full login-form\">\n          <div class=\"link-sent fadeIn\">\n            <div class=\"p-2 flex items-center justify-center -mt-8 primary-header\">\n              <app-email-sent></app-email-sent>\n            </div>\n            <div class=\"p-4 text-gray-700 text-sm text-center secondary-header\">\n              We have sent a verification link on {{loginForm.value.email}}.<br> Please click the link to activate your\n              account.\n            </div>\n          </div>\n          <div class=\"w-full text-center form-group\">\n            <button matRipple *ngIf=\"!resetPwdLinkSent\" (click)=\"resendVerifyEmail()\" [disabled]=\"!loginForm.valid\"\n              class=\"w-full btn-cta p-2 mb-2 font-semibold\">Resend Verification Email\n            </button>\n            <div class=\"text-gray-700 text-sm text-center why-verify px-2 hover:underline cursor-pointer\">\n              <span\n                matTooltip=\"Townscript sends all important communication regarding your events & account-related updates via e-mail. We just want to make sure you don\u2019t miss these important information\"\n                matTooltipPosition=\"right\" matTooltipClass=\"ts-login-tooltip\">Why verify?</span>\n            </div>\n          </div>\n        </form>\n      </div>\n      <div class=\"agreement my-2\" *ngIf=\"isDefaultView || isSignUpView\">\n        <div class=\"w-full hor-linear-grad my-2\"></div>\n        <p class=\"text-xs text-center p-2 text-gray-800 px-5\">\n          By continuing, you agree to Townscript's\n          <a appDataAnalytics eventLabel=\"loginTerms\" clickLocation=\"\" class=\"text-blue-700\"\n            href=\"{{baseUrl}}terms-and-conditions\">terms of service</a>\n          and\n          <a appDataAnalytics eventLabel=\"loginPolicy\" clickLocation=\"\" class=\"text-blue-700\"\n            href=\"{{baseUrl}}privacy-policy\">privacy policy</a>.\n        </p>\n      </div>\n    </div>\n  </div>\n",
        encapsulation: ViewEncapsulation.None,
        styles: ["@-webkit-keyframes fadeInUp{from{opacity:0;transform:translate3d(0,100%,0)}to{opacity:1;transform:none}}@keyframes fadeInUp{from{opacity:0;transform:translate3d(0,50%,0)}to{opacity:1;transform:none}}@-webkit-keyframes fadeIn{from{opacity:0}to{opacity:1}}@keyframes fadeIn{from{opacity:0}to{opacity:1}}.ts-login-tooltip{background-color:#666;color:#fff;font-size:12px;opacity:.98;white-space:pre-line}.login-signup-view{max-height:90vh;overflow:hidden}.login-signup-view .color-blue{color:#3782c4}.login-signup-view .fadeIn .primary-header,.login-signup-view .fadeIn .secondary-header{-webkit-animation-duration:.4s;animation-duration:.4s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-delay:0s;animation-delay:0s;-webkit-animation-name:fadeIn;animation-name:fadeIn}.login-signup-view .fadeIn .secondary-header{-webkit-animation-delay:.1s;animation-delay:.1s}.login-signup-view .fadeInUp .login-form .form-group{-webkit-animation-duration:.4s;animation-duration:.4s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:fadeInUp;animation-name:fadeInUp}.login-signup-view .fadeInUp .login-form .form-group:nth-child(1){-webkit-animation-delay:.1s;animation-delay:.1s}.login-signup-view .fadeInUp .login-form .form-group:nth-child(2){-webkit-animation-delay:.2s;animation-delay:.2s}.login-signup-view .fadeInUp .login-form .form-group:nth-child(3){-webkit-animation-delay:.3s;animation-delay:.3s}.login-signup-view .fadeInUp .login-form .form-group:nth-child(4){-webkit-animation-delay:.4s;animation-delay:.4s}.login-signup-view .fadeInUp .login-form .form-group:nth-child(5){-webkit-animation-delay:.5s;animation-delay:.5s}.login-signup-view .fadeInUp .login-form .form-group:nth-child(6){-webkit-animation-delay:.6s;animation-delay:.6s}.login-signup-view .fadeInUp .login-form .form-group:nth-child(7){-webkit-animation-delay:.7s;animation-delay:.7s}.login-signup-view .ts-loader{-webkit-animation-duration:.2s;animation-duration:.2s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:fadeInUp;animation-name:fadeInUp}.login-signup-view .ts-loader circle{stroke-width:5%!important}.login-signup-view .view-body .blue-btn{background:#3782c4;color:#fff;transition:.15s}.login-signup-view .view-body .blue-btn:hover{background:#1369b5}.login-signup-view .view-body .default-view-body .strike-through-margin{margin:30px 0;text-align:center;border-bottom:1px solid #dcdcdc;line-height:.1em}.login-signup-view .view-body .default-view-body .strike-through-margin span{background-color:#fff;padding:3px 30px}.login-signup-view .view-body .default-view-body .strike-through{text-align:center;border-bottom:1px solid #dcdcdc;line-height:.1em;margin:30px auto}.login-signup-view .view-body .default-view-body .strike-through span{background-color:#fff;padding:3px 30px}.login-signup-view .view-body .default-view-body .logo{height:auto;width:25px}.login-signup-view .view-body .hor-linear-grad{height:1px;width:100%;background-image:linear-gradient(to bottom,rgba(255,255,255,0) 0,#e2e2e2 48%,rgba(255,255,255,0) 100%)}"]
    })
], TsLoginSignupComponent);
export { TsLoginSignupComponent };
//# sourceMappingURL=data:application/json;base64,